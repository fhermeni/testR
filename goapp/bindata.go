// Code generated by go-bindata.
// sources:
// assets/htmlReport.html
// assets/repos.html
// assets/root.html
// assets/testR.py
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsHtmlreportHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x59\xdd\x6e\xdc\xb8\x15\xbe\x1e\x3f\x05\xab\x35\x10\x1b\x58\x49\x75\xb3\x01\x0a\x57\xa3\x76\x91\x6c\xd0\x8b\x60\xb3\xd8\x4d\x2f\x7a\xc9\x91\xa8\x11\xd7\x94\xa8\x90\x94\xed\xc1\x64\x9e\xa3\xcf\xd0\xd7\x68\x5f\xac\xe7\xf0\x47\x3f\x63\x79\xd6\x71\x52\x60\x8d\x64\x86\xbf\xe7\x7c\xe7\xf0\xfc\x91\x93\xfd\xe1\xcd\xfb\xd7\x1f\xfe\xf9\xd3\x0f\xa4\x36\x8d\xc8\xcf\x32\xfc\x22\x82\xb6\xdb\x75\xc4\xda\x28\x3f\x5b\x65\x35\xa3\x25\x7c\xaf\xb2\x86\x19\x4a\x8a\x9a\x2a\xcd\xcc\x3a\xea\x4d\x15\xff\x39\xb2\x13\x86\x1b\xc1\xf2\xfd\x3e\x79\x7f\xd7\x32\x75\x38\xa4\xd0\xfc\x99\x75\xf2\x70\xc8\x52\x37\xb7\x5a\xe1\x3a\xc1\xdb\x1b\xa2\x98\x58\x47\xda\xec\x04\xd3\x35\x63\x26\x22\x76\xc5\x3a\xda\x31\xc3\x23\x52\x2b\x56\xad\xa3\x94\x6a\xe0\xa1\xd3\x42\xeb\x74\x23\xa5\xd1\x46\xd1\x2e\xc6\x15\x49\xc3\xdb\x04\x86\xa3\xe7\x92\xac\x64\x6b\x62\x7a\xc7\xb4\x6c\x98\xa5\x3f\x1d\x18\xa9\x3f\x1b\xae\x61\x00\x36\xd0\xc8\x52\xaf\xbc\x6c\x23\xcb\x1d\x12\xdd\xef\xcf\x35\xb9\x5e\x93\xe4\x1d\xd5\x26\xf9\xa5\x6f\x1a\xaa\x76\x87\x03\xb2\x6b\xe9\x2d\x29\x04\x90\x5a\x47\xd0\xdc\x50\x45\xdc\x57\x5c\xb2\x8a\xf6\xc2\x84\x6e\xc5\xef\x59\x19\x1b\xd9\x59\x94\xab\xac\xe4\xc3\xbe\x02\x64\xa1\x1c\xce\x20\xae\x44\xcf\x4b\xb7\x60\xb6\xc2\xd3\x40\x58\x4c\xf9\xf9\x55\xa6\x3b\xda\x1e\xad\xd8\x28\xda\x06\x02\xb0\x82\x06\x51\xa3\xfc\x03\x48\xf8\x73\x96\xd2\xb0\x39\xc5\xdd\xf9\x6a\xfc\xfb\x6c\xa2\xb5\x31\x9d\xbe\x4e\xd3\x2d\x37\x75\xbf\x49\x0a\xd9\x80\x05\x9d\x4f\xac\xe9\xdc\x9b\x53\x94\x67\x3c\x90\xac\x28\xa9\x68\xec\xb6\xc0\x78\xca\xf3\x11\xd3\x6a\xb4\x45\x92\x92\xc1\x1a\x67\x80\x9d\x6a\x52\xd0\xcd\x43\x2d\x15\x52\x08\xda\x69\x16\x54\x1e\xfa\x01\xba\xdb\x50\x49\xd5\x1c\x09\x68\x87\x7c\x5b\xb0\xca\x2c\x9c\x00\x6f\xbb\xde\xc4\x5b\x25\xfb\x6e\x51\xff\x93\xf9\x98\x96\xa5\x6c\xfd\x2a\x02\x7f\xc7\xd2\x7f\xec\xe1\x2c\x38\x2c\x21\xb2\x2d\x04\x2f\x6e\xd6\xd1\xf9\xc5\x8b\x6f\x6a\x26\xba\x17\x97\x49\x23\x4b\x2a\x2e\x2e\x13\x5d\xcb\xbb\x8b\xcb\xbf\x38\x25\x8d\xb4\xc6\x73\xc3\xae\xff\x76\x9f\x1e\x96\x85\x42\xcc\xae\x03\x7b\x37\xec\x1e\x8c\x3f\x70\x07\x31\x63\x34\x36\x25\x05\x71\x80\x75\x13\x11\x5e\xc2\x14\x17\x06\x2c\x0b\x01\xd5\x10\x45\x60\xa7\x62\x65\x5f\xb0\x8b\x4b\x1c\xbb\x61\xbb\xbe\x03\x62\x35\xd7\x49\x58\x61\xa1\x3d\x66\x38\x53\x6d\x6c\x4c\x3b\x5b\x08\x5e\xd5\x1b\x23\x5b\x8f\xd0\x75\x06\x8c\xb0\x9a\xc0\xff\xc1\x7b\xb0\x8d\x20\x07\x4d\x0d\xb8\x26\x46\xb5\x15\xbb\xae\xe6\x20\x19\x19\x5a\xb1\x97\xc8\x6a\x8f\xb8\x4e\x96\x3a\x66\xf9\x19\x79\x06\x92\x52\xc9\xae\x94\x77\x2d\xf8\xf0\x76\x2b\xd8\x80\xac\xa4\x86\xfa\xb1\x75\x14\x16\x45\x84\x2a\x4e\xe3\x9a\xea\x4e\x76\x56\x77\xaa\x67\x7e\x90\xdd\x83\xa6\x4a\x86\x5a\xa7\xc2\x5a\x67\x80\x33\x55\x61\x41\x15\xc4\xad\x3c\x98\xfd\xd2\x12\xad\x62\xd9\x8a\x1d\xf8\xb6\x43\xf4\xc6\x33\x3f\xde\x33\x8a\xed\xff\xec\x68\x2f\x02\x9d\x41\xb2\x86\xb5\x3d\x99\xf5\x62\xc5\xb7\xb5\x21\x41\x99\x03\x05\x4f\x43\x80\xfb\xd2\xc1\xbc\x46\x1b\x72\x47\xe5\x06\xde\xb7\x17\x2f\xb8\xbe\xd6\x7d\x51\x30\xad\x5f\xc0\xc1\xd9\x26\x2b\x79\xbb\x25\x88\x1f\x03\x40\x96\x02\xa9\x2f\xa0\x5e\x51\x2e\x7a\xc5\x90\x3a\x36\x03\x69\xf2\x35\x68\x6b\x21\xef\x2c\x6c\xf8\x66\xea\x2b\x42\xd6\xc6\xe1\xd5\xe6\xb7\xc9\x12\xf0\x59\xb0\x2f\xcd\x3a\xaa\xa8\x91\x6a\x30\x53\x88\x51\xbc\x74\x86\xfe\x05\x78\xee\xe8\xd2\x09\xb1\xf2\x8b\x05\x45\xc2\x47\x87\x73\x92\xea\xff\x59\x4e\xc4\xd0\xca\x96\x3d\x44\xe0\x3c\xa5\x17\x0b\xf9\xf1\x41\xce\x49\x31\x92\xfa\xf6\xe8\x46\x58\x09\xf8\x24\x32\x69\x3a\x07\x82\x4e\xbc\xdf\xeb\x9e\x1b\xf6\x8b\xa1\xa6\xd7\xae\x94\xc0\xdc\x18\xa2\xa2\xe0\x47\x59\xc9\xc6\xee\xdc\x17\x1b\x0e\xec\xc9\xa5\xa1\xc6\xf1\xe7\x58\x01\x32\x2c\x6b\xa0\xa4\xc1\xf2\x05\xaa\x16\x3b\x0c\xb9\xf5\x38\x1f\x15\x35\x2b\x6e\x42\x32\x7e\x32\x1b\x6f\xb7\x33\x16\x1d\x18\x4d\xdf\x2d\xb0\x10\xec\x96\x89\x18\x72\x27\xf9\x5c\x36\xe8\x75\x73\x26\x30\x80\xf1\xe9\x51\x2e\x2e\xfe\x2e\xf2\x79\xa2\x71\x3d\x51\x7e\x17\x67\xa6\xd8\xde\x3a\x4b\x5f\x52\x32\xbb\x87\x6e\x43\x31\xef\xc7\x05\x57\x85\x60\xcf\xd0\xc5\x0d\xef\x3a\x56\xce\xd5\x01\x63\x4b\xec\x76\x2c\xd6\x30\x50\x3f\xe0\x32\x1a\xb9\x33\xe9\x60\xe1\x83\x81\x67\x29\xf0\x76\x85\x3a\x70\xe8\x6c\xdd\xeb\x6a\xdd\xa5\x9a\xd5\x97\xf4\x27\x4a\x64\x98\xe2\x15\x11\xac\x25\xe7\x5d\x82\x65\xa8\x76\xc3\x53\x72\xda\xad\x27\xfe\xfb\x31\x5f\x09\x50\xeb\xef\xc2\x46\xd4\xcf\x89\xd5\xce\x77\xa1\x94\x74\xa8\x6a\xa9\xcc\x3b\xb9\xf5\x35\x65\xb6\x51\x69\x6e\x3f\x9c\xfc\xf5\x77\xf9\x99\x23\xff\xca\x8d\x9c\xae\x74\xbb\x69\xa9\xdb\xf9\x62\x35\x85\xc9\x86\x9b\x74\x64\x49\xaf\x0e\x87\xbf\x96\xbc\xaa\xd6\xba\x13\xdc\xd7\x96\xa7\x0a\x62\x9c\x7f\x6d\xa9\x40\x0d\x4c\x37\x1b\x75\x4b\xa6\xb4\x42\xbd\x0c\x78\x5f\x05\xbb\x19\xb4\xcc\x3e\xfa\xb5\xdf\xf7\x06\x84\x4d\x7e\x68\xc0\x22\xfd\x90\xa3\x09\x3e\xeb\x46\xfd\x21\x1c\xcb\x8a\x53\x46\x5e\x07\xfc\x53\x3a\xae\x92\x6f\xb6\x84\x0a\xb8\x49\xd2\x5b\x28\x7c\x14\x11\x72\x2b\x23\xa2\x55\xb1\x8e\x8e\xf6\x7c\x6f\x17\xfc\x43\xe1\xbe\x20\xad\x5d\x9d\x93\xa3\x95\x3f\xd2\x86\x39\xc1\x08\xb5\x23\x60\xe3\x50\x22\x91\xc2\x23\x2e\x93\x99\xc0\xfb\x3d\x83\xba\xe9\xf7\x8d\x3f\x01\xbb\x3a\x09\xec\xc1\x69\x3c\x0d\xdb\xb8\xed\x09\xf0\xc6\xc5\x13\x84\x83\x52\x8f\x75\xda\x96\xa0\xd2\x63\xfd\x82\x82\x5f\xce\x7c\xad\x60\xad\x2d\x05\x7f\x94\x9e\x92\x26\x80\x96\x0b\xba\x11\x90\x55\xeb\x97\x0b\xd4\xc0\x2e\xc1\x3f\x7e\x52\xec\xf6\x70\x18\x82\x85\x14\x25\x86\x0b\x3f\x31\x06\x8c\xd5\xd9\x2c\x18\x0d\xa4\xe6\x63\xcb\x01\xc5\x20\x88\x01\xad\xed\xd8\xcf\xb8\x96\xb7\x58\x10\xe0\x4d\x47\x81\x9b\xaa\xe1\x86\x67\xc2\x33\x89\xed\xa8\x21\x1c\x19\xa8\x1b\x76\x63\x6e\x36\xb5\xbd\x3f\x43\x1a\x6f\x40\x48\xe8\x8d\x6e\x67\xe1\x28\xbc\x11\x11\xaf\x6f\x8d\x52\x4e\xe7\x71\xbb\x6f\x7e\x69\x4c\x59\x08\x27\x43\x8c\x98\x87\x07\xab\xc4\x91\xf1\xa8\x46\x37\xa1\x42\x0a\x98\x68\x20\x33\xf6\xbd\x63\x12\x36\x9d\x5c\xe7\x37\xdf\x9e\xdf\xfa\xc3\xf2\xea\x5e\x4d\x25\x04\xa8\x46\x01\x79\xbb\xe4\x36\xd8\x0d\x68\xd3\x5e\x8d\xc0\x32\xf0\x31\x06\x16\xdd\x40\x9e\xda\xef\x31\x79\xbd\xc3\x31\x4d\xdc\xb6\xf9\x28\x32\x41\xe3\x25\xb8\x7c\x7e\xc3\x34\x65\x48\x84\x8e\x18\xca\xae\x31\xa4\x33\x85\xf6\x6d\x77\x80\x40\xe1\x3c\x07\xf8\x01\x92\x23\xe1\x8f\x18\xb6\xda\x74\xf1\x1a\xbb\x1e\x09\xe6\xb9\x68\xd4\x98\x8f\xa7\x3e\xad\xbc\x1c\xa8\x8c\x87\xf8\x4d\xb8\xfe\x01\xfa\x01\x95\x1b\x92\xbd\x81\x3b\xb0\x75\xdc\xf7\xb6\x89\x33\x43\x45\x8a\x97\x7b\x37\x7c\x81\xb7\xea\x4b\x14\xa5\xec\x95\x2d\x0f\x48\xf2\xc6\xb7\x66\xa7\x39\xf3\x4a\xdb\x5f\xda\xb0\x74\xdc\xab\x99\x52\xec\xc4\xa8\xd6\xd1\x16\xa6\x7b\x60\x34\xbc\x7d\x61\x1b\x9d\x68\xea\x8d\x2b\xf4\x52\x9b\xbf\xd1\xa5\xf0\xe1\x62\x08\x41\xf6\xf9\x02\x52\x5a\x09\xf5\x0d\xec\xe3\x70\xd3\xbd\x5f\x47\xf1\x55\xe4\x8b\xaf\x92\x53\x88\x52\xf6\x99\x6d\x92\xff\xed\xae\x78\x9c\x5b\x98\xc4\x8a\x03\x62\xcf\x23\xb3\x88\xd6\xa7\xd6\x8a\x33\x51\x6a\x66\x5c\x4f\xb0\x2d\x40\xce\xdf\xda\x2b\x80\xbd\x17\x76\xa8\x29\x0d\x05\x91\x9b\xf1\x8a\xc8\xba\xfc\x43\xcd\xfc\x4d\x77\xb8\x3f\xb2\xfb\x9a\x6f\x30\xc6\x81\x9b\xb8\xb2\x0b\x5a\xd4\x10\x28\xe4\x8a\x9a\x40\xb9\x09\x35\x4b\x07\xe1\x9e\x17\x14\x66\x6d\x9a\x5a\x21\x19\xdd\x77\x18\x66\xc6\x39\x48\x68\x8a\x5d\x7b\xdd\x76\xc3\xdd\x21\x84\x9e\x49\x09\x58\xc8\x92\xe5\x70\x3f\xbc\xf0\x75\xfc\x27\x7f\x7d\xfa\x84\xd5\xdf\x27\x2c\x87\x3f\x61\xe9\x7d\x99\xa5\x76\xa5\xdf\x06\xa5\xcd\x9d\x83\x3c\x41\x99\xf1\xbc\xe8\x15\x58\xb6\xc1\xbb\x25\xcf\x89\x23\xde\x81\xde\xfc\xee\x6f\xfd\x10\xf2\x18\x86\x92\x24\x09\x71\x62\xc0\xf5\x00\x21\x5e\xec\xbe\x0e\x44\xf8\xa4\xa4\x91\x0d\xc0\xb4\x20\x81\xf2\x04\x28\x1c\xc5\x02\xd6\xe9\xe8\x02\x5c\x5b\xe3\x86\xb2\x76\xb4\x07\x7f\xce\x94\x64\x1b\x48\xb6\xf6\x42\x6f\x39\x22\x9e\x2c\xdd\xe4\xd7\x04\x39\x32\x4d\xee\x20\x28\x03\xa8\xc1\xc1\xb6\x8a\x51\x7b\xd9\xa9\x69\x6b\x4d\x01\x8e\x17\xba\x1f\x7b\xaa\x0c\x5c\x68\x93\x70\xa4\x40\xdc\x91\x46\xf1\x8f\x48\x53\xe2\xc5\xb1\x63\x0f\x58\xb8\xc7\x85\x81\x81\xeb\x1e\x33\x08\x15\xfb\x24\x1b\x3e\xf8\x0e\x5e\xe9\x02\xd0\x57\xf4\x4b\xe2\x3a\xe2\x79\x0e\x3a\x7d\xbb\x3e\xf9\xee\x56\x08\xa9\x99\x0f\xa2\x25\xd7\x0d\x1f\x68\x84\x47\x35\x5e\x96\xac\xf5\x4f\x6a\xf9\x7f\xff\x35\xbe\x6f\xad\x66\x57\x03\xc7\xd7\x66\x0c\x2c\xac\xb1\xba\x9f\xde\x72\x4e\x85\x10\x70\xdb\xdc\x19\x9b\xb7\x32\xd0\xbf\x62\x3e\x54\xfc\xe6\x21\xc0\x4c\x56\x49\x89\x06\xe3\x19\x38\xc8\x71\x07\x81\xc5\x1c\xab\x78\x72\x93\x3a\x73\x44\x27\x93\x02\xb4\xf6\x40\xa1\x5d\x2f\x84\x7b\x57\xf0\x70\x75\x43\x85\x98\x55\x69\x4d\x0f\x21\x27\xca\xff\xf3\x6f\x72\x5c\x7f\x56\x70\xf6\xac\x4d\x6a\xa6\xc0\xe1\x38\x53\x7f\xeb\x5b\x5e\xb0\xa4\x02\xf6\x6f\xed\x14\xf9\x7b\x98\xb2\xe5\xe2\x9f\xfe\x78\xf5\x2a\x4b\x2d\x87\xb9\xfe\x06\x2d\x8c\xc2\x3b\xa1\xb1\xa9\x0b\xc5\x3b\xe3\x4a\xd7\xf0\x3b\xcb\xaf\xf0\xef\x63\x0f\x11\x33\xbe\x4a\xae\xae\x92\x97\xf6\x67\x9b\x5f\xb5\x7d\xe3\xb4\xcb\xdd\x63\xcc\x63\x7b\x87\x5f\x94\x3e\x73\x9f\xfb\x69\x67\xbe\x1e\xdf\x44\x6d\x7a\x03\xb3\xc0\x1f\xd0\xfe\x17\x00\x00\xff\xff\xeb\xdd\x24\x7d\x50\x1b\x00\x00")

func assetsHtmlreportHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsHtmlreportHtml,
		"assets/htmlReport.html",
	)
}

func assetsHtmlreportHtml() (*asset, error) {
	bytes, err := assetsHtmlreportHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/htmlReport.html", size: 6992, mode: os.FileMode(420), modTime: time.Unix(1450867345, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsReposHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x55\x51\x52\xdb\x30\x10\xfd\x36\xa7\xd0\x68\xe8\x5f\x6d\x37\x30\xed\x74\x18\x47\x27\xe8\xf0\x01\xf4\x00\x8a\xbd\x89\x45\x65\xd9\x48\x6b\x68\xc6\x93\x03\xf5\x1a\x3d\x59\x57\x92\xed\x38\x04\x3e\xda\x32\x60\xcb\xbb\xab\xb7\x4f\xfb\x56\x4b\x51\x63\xa3\x99\x96\x66\xb7\xe6\x60\xb8\xb8\x48\x8a\x1a\x64\x45\xef\xa4\x68\x00\x25\x2b\x6b\x69\x1d\xe0\x9a\xf7\xb8\x4d\xbf\xf2\xe0\x40\x85\x1a\xc4\x30\x64\xdf\x1d\xd8\xec\x56\x36\x70\x38\x14\x79\xb4\x26\x89\x8f\xd0\xca\xfc\x60\x16\xf4\x9a\x3b\xdc\x6b\x70\x35\x00\x72\x16\x22\xd6\x7c\x0f\xa8\x38\xab\x2d\x6c\xd7\x3c\x97\x8e\xd0\x5d\x5e\x3a\x97\x6f\xda\x16\x1d\x5a\xd9\xa5\x3e\x22\x6b\x94\xc9\xc8\x1c\x53\xfe\x13\x20\x02\xc1\xfd\x07\xc6\xb6\x35\x98\xca\x17\x70\x6d\x03\x01\x70\x69\x58\xf2\x2b\xf2\xb1\x68\xc5\xa6\xad\xf6\x3e\xd9\x30\x5c\x76\xec\x66\xcd\xb2\xc3\xc1\xa7\xae\xd4\x33\x2b\x35\xc1\xae\x79\x49\x18\x52\x19\xb0\x81\xd4\x89\xab\x93\x3b\x48\x3d\xd2\xec\xac\xaf\xce\x82\x6c\xfb\x12\x9d\xaf\x50\x75\xda\x54\xe9\x17\x2e\xbc\x27\x09\x7e\x8a\x90\xe3\x89\x6a\xc4\xce\xdd\xe4\xf9\x4e\x61\xdd\x6f\xb2\xb2\x6d\x72\xcf\x70\x29\x20\x17\x85\x9a\xd0\xb6\x92\x6d\x65\x1a\x83\xc9\x9e\x2b\xfa\x93\x62\x04\x3d\xd5\x3d\x32\xc9\x89\x4a\x64\x1a\x56\xc9\x4c\x82\x2a\x73\xb5\x70\x5c\x44\xeb\x30\xa8\x2d\xd3\x60\xd8\x44\xe1\x0e\xba\xd6\x45\xb0\x02\xe5\x46\xc3\xc4\x24\x7e\x84\x67\x5a\xb7\xcf\x60\xc7\xf5\x46\xed\x38\x53\x15\x95\x83\x76\x5a\x9c\x2a\x82\x53\xf3\x86\x0f\x3b\x51\x26\xbb\x08\x29\x14\xb6\x76\x4f\xad\x5a\x2f\x28\x8e\xfe\x6f\xd2\x21\xa3\xc2\x34\x0a\x43\xc0\xc2\xf5\x40\x7d\xe4\x5e\x1b\xef\x51\x62\xbf\xb4\xd2\x72\x4c\xe8\x8d\x33\x8f\x02\x43\x4f\xcc\xd9\x86\xc1\xd2\x6d\x03\x76\x69\x3e\x5e\x3a\xdf\x22\x54\x83\xfb\xbe\x69\xa4\x55\x40\x25\x48\x92\x05\x33\xd2\x08\x63\x8c\x9b\x2a\x4d\x39\x16\xcc\x0b\xac\xc4\x2c\x72\xee\x6b\xe1\xce\x84\xf5\x06\xe3\xf5\x7d\xed\x60\x39\x8b\x2e\x2f\x2e\x71\xae\xce\x90\xdf\xb0\xd1\x0e\x97\x3d\xb4\x28\x75\xb8\xf3\xc7\x62\x53\xb8\xeb\xa4\x99\x85\x83\x9f\x98\x96\x60\x90\x24\xd3\x72\x03\x3a\x3e\xd3\x20\x3d\x3c\xd1\x89\xe8\xd4\x65\x09\xce\xb1\x23\xa0\x8b\x96\x61\x00\xed\x88\x60\xe5\x0b\x65\xe9\xcb\x54\x91\x7f\x57\xe2\xdb\x1b\xd9\x87\x22\xf7\xd9\xc5\x91\xd2\x51\x8e\x11\x60\xb2\x4e\x57\xd4\xaf\x7d\x2f\x89\xd8\x91\x31\x65\xbc\x75\xd7\x6f\x9c\x82\x8b\xdb\x96\xd9\xa9\x89\x48\x2b\x6a\xed\xeb\x69\xef\x88\x3f\x36\x39\xcd\x81\x2d\xcd\x32\x3a\xf9\x08\x53\xab\xaa\x02\x93\x76\x56\x99\xd0\xaa\xef\xcf\x83\x93\x71\xd0\x6b\x9d\x5a\xb5\xab\xf1\x7c\x54\x68\xea\x2f\x2e\xfc\x80\xbb\x63\x85\x6b\xa4\xd6\x27\x94\x9b\x1e\x81\xfc\xbf\x7f\xb1\xab\x4f\xab\xcf\x54\x1b\x1f\x21\xe6\x3b\x38\x2d\x8e\xef\xc8\xd7\x2f\x5d\x69\x55\x87\xcc\xd9\xf2\x38\x08\x1f\xe9\xf7\xa9\x07\xbb\x4f\x57\xd9\x6a\x95\x5d\x87\xd9\xf7\xe8\xfc\x68\x88\xe1\xe2\x82\xd1\xcf\x7b\x7b\xe7\xc1\xfe\x97\xfb\xe2\xfc\x3e\x8d\x27\xae\x51\x40\x2a\x3f\xfd\xeb\x12\x7f\x02\x00\x00\xff\xff\x89\x8d\xa8\x0a\xc1\x06\x00\x00")

func assetsReposHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsReposHtml,
		"assets/repos.html",
	)
}

func assetsReposHtml() (*asset, error) {
	bytes, err := assetsReposHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/repos.html", size: 1729, mode: os.FileMode(420), modTime: time.Unix(1449873833, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRootHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x56\xcd\x6e\xdc\xb6\x13\x3f\xef\x3e\xc5\x44\x97\xff\xe5\x2f\xc9\x9b\x34\x40\x61\x68\x95\x16\xa9\x6b\x1b\x45\x9b\x22\xde\x1e\x72\x0a\x28\x6a\x24\xd1\x4b\x91\x0a\x49\xad\xad\xa2\x2f\xd4\xd7\xe8\x93\x75\x48\x4a\xeb\x5d\xa7\x01\xfa\x61\x18\x90\x96\x1c\x0e\xe7\xf7\xc1\xa1\x8a\x17\xdf\xbd\x7b\xbb\xfb\xf0\xf3\x15\x74\xae\x97\xe5\xba\xf0\x0f\x90\x4c\xb5\xdb\x04\x55\x52\xae\x57\x45\x87\xac\xa6\xe7\xaa\xe8\xd1\x31\xe0\x1d\x33\x16\xdd\x36\x19\x5d\x93\x7e\x9d\x84\x09\x27\x9c\xc4\x72\x87\xd6\xbd\x2f\xf2\xf8\x63\xb5\xf2\x13\x52\xa8\x3d\x18\x94\xdb\xc4\xba\x49\xa2\xed\x10\x5d\x02\x21\x62\x9b\x4c\xe8\x44\x02\x9d\xc1\x66\x9b\xe4\xcc\x52\x52\x9b\x73\x6b\xf3\x4a\x6b\x67\x9d\x61\x43\xea\x23\xb2\x5e\xa8\x8c\x86\xe3\x4e\xff\x2a\xa1\xa3\xc2\xcc\x7f\xc8\xd1\x68\xe5\x52\xf6\x80\x56\xf7\x18\x12\x9e\x0e\x9c\xd6\x57\xe4\x33\x57\x45\xa5\xeb\x69\xe6\xa0\x16\x07\xe0\x92\x52\x6d\x13\x4e\xeb\x98\x50\x68\x92\x72\xb5\x7e\x36\x77\x3f\xf6\x95\x76\x46\xab\x58\x64\xb7\x89\x7c\x42\x61\x7b\x26\x65\xe9\x34\x1c\x84\x1d\x99\x14\x16\x61\x54\xc2\x81\x47\x45\x30\x06\x6d\x9c\x2d\xf2\x18\x45\x05\x6c\xc2\xf2\xa1\x2c\xd8\x8c\xa2\x73\x6e\xb0\x97\x79\x4e\x8c\x52\x86\x94\x8b\x4c\x9b\x36\x29\x0b\xd1\xb7\x60\x0d\x7f\x0a\xa8\xa4\x6e\xb3\xa7\x28\xae\xfb\x5c\xf4\xac\x45\xbb\x2c\xed\x99\xe5\xda\xa5\x2f\x2f\x2e\x86\xc7\x6c\x50\x6d\xb2\xd4\x3e\xcf\xd3\x7a\x9d\xe4\xc0\xa4\x5b\x86\x20\x0c\x95\xbb\xf8\xe3\xed\x6d\x91\xb3\x12\xe8\x8d\x6b\x2d\xa1\x1a\x1d\x10\x0e\xce\x94\xd2\x0e\x06\xa3\x0f\xa2\x46\x60\xf0\xc0\x26\x38\x83\xeb\xba\x13\xc8\x16\x3a\x61\x9d\x36\x53\x56\x54\xc6\x63\xfd\xc5\x0a\xd5\x42\xc1\x75\x7d\xb4\x60\x78\xff\x3f\x8c\x83\xd4\xac\x86\x49\x8f\x06\x7a\x76\x40\x05\x76\x24\x4a\x84\xc1\x85\x37\xbf\x4f\xa4\x99\xa9\x39\xb0\xd6\x0a\xe1\x45\x91\x0f\xb3\x7c\x39\x69\x54\x06\xb1\xba\x57\xe5\x8d\x7e\x48\x69\xc9\xe8\x8b\x8a\x5b\xd1\x60\xe4\xfb\x83\x1e\xe1\x41\x48\x09\x1d\xed\xe4\xf3\xf2\x91\xca\xec\xc5\xaf\xb1\xfe\x99\x8f\x6a\x14\xb2\xf6\xb3\x3d\xdb\xa3\x47\x6f\x91\x36\xf6\x01\xc7\xd2\xce\x75\x1d\x42\x7a\x2d\xfd\xc3\x5b\xb7\xfc\xd6\xee\x89\xa3\x19\xee\xd5\xdd\xee\xfd\xc7\xdd\xbb\x1f\xae\x7e\x9a\x41\xfb\xd4\x85\x28\x7d\xc2\x76\x9c\x8a\x5c\x90\x25\x68\x11\xad\x5d\x2d\x09\x3e\x33\x46\xad\xb9\x7d\xa6\x3b\x01\x34\x39\xaa\x83\x20\x3f\xf6\x48\x66\x3f\x30\x23\x58\x45\x87\x25\x4f\xca\x2b\xc5\xcd\x34\xb8\x2f\xd6\x10\x44\xa6\x3a\x2a\xf4\x44\xd5\x20\x94\xf5\xc2\x06\x76\x4f\x69\x08\x95\x9d\xc2\x6a\xb4\xf1\xd0\x9e\xd7\xd7\xa1\x1c\xb2\x56\xb8\x6e\xac\x42\x71\xcc\x38\xc1\x7d\x29\xdc\x20\x73\x24\x7e\xca\x54\xca\x38\x47\x6b\x49\x9c\x3d\xaa\x94\x12\xa5\x14\xd9\x93\xa8\x29\x9d\x76\x4c\xa9\x0e\x2a\xfc\x3a\xe4\x80\x18\x0a\x21\x34\xd4\xea\xb5\xc7\x19\x14\x49\x32\xd7\xeb\x39\x3c\xa1\x00\x16\x0a\x66\xdc\xd7\x37\x67\xa0\x17\x1c\x3f\xea\x5a\x34\x53\x04\x1b\x03\x67\x6a\xb3\xa9\x97\x27\x22\x05\xfd\x67\x36\x66\x9f\x9e\xb9\xc0\xa0\x1d\xa5\xb3\x97\x21\xef\x60\x88\xd5\xb8\x4d\x96\x65\x6b\xd6\x38\x34\x1f\xed\x18\x70\x5c\xae\x53\xb2\x9a\x21\xdf\x11\x5d\xfe\x98\xfb\x66\x97\x6e\x36\xaf\xbf\xca\xd8\x30\xd8\x41\xbb\x48\x5a\x6c\x65\xc1\xb5\xd9\x30\xc1\x6f\xc3\xe4\x3a\xad\x60\x31\xc6\x09\x8a\xdc\x6f\x77\x1c\x8f\x1a\x15\x39\x59\x30\xf6\xac\xa1\xbc\x1b\xed\x20\xb8\xd0\xa3\x05\x56\xe9\x31\x9e\xcb\x90\xf5\xcd\xb9\x7a\x7f\xbb\x9c\xa4\xe4\x1d\xf2\x3d\xb1\xef\x7b\x83\x72\xc4\xb7\x57\x26\xd8\x7f\x3e\x7a\xb7\x0d\xdc\xfa\xc3\xf9\x3f\x07\x7b\xa5\x1f\x9e\xb9\x1c\xde\x9c\x1c\xc5\x5d\x47\x47\x9d\x14\x00\x46\x44\x52\x5f\xa9\x48\xb6\x89\xd6\x52\xb7\xae\x33\x0a\xb9\x5d\x7a\x0e\x6b\xc8\x29\x35\xf4\x93\x45\xd9\x78\x55\xf0\x91\x23\x46\x25\x1a\x83\x08\x9f\x46\x4d\x57\x9e\x6e\xe0\x5a\xeb\x96\xa4\x27\x08\xe4\x89\x96\x2c\x95\xc1\x9d\xf6\x71\xb4\x03\x29\xa8\xf4\xd2\xb5\x82\xae\x3d\x82\x1e\xa8\x86\xd8\x5a\x7c\xde\x03\x9a\x89\x1a\x4b\x16\xa8\x8c\x67\x3a\x36\x96\x55\xd1\xd0\x75\x87\x66\x69\xa5\x9d\xa8\x6b\x72\xf0\x60\x84\x72\xe1\x4a\xf9\xeb\xeb\xe3\xd9\xe5\x21\xe9\xda\xf9\x6c\x70\x18\xa5\x4c\x8d\x68\xbb\x90\x88\xe6\xc2\x1d\x71\xec\xd9\xf8\xe8\xd2\x7e\x74\x48\x0b\xff\xf8\xfd\x49\xb7\x9e\x09\xe9\xf4\x65\xc3\x2a\x81\x2a\x23\x80\x64\x7e\x81\xe6\x1b\x6a\xc0\x1c\xb3\x86\xf6\xfe\x3e\x4c\xc1\xcd\x32\x15\xce\xd0\xcb\x8b\xcd\xeb\xe5\x16\x3a\x41\x37\xbf\x78\x33\x1d\x01\xe7\x11\xb1\x7f\xb5\xdc\x08\x3a\x74\xe1\x1a\x5a\x3c\x71\x4f\xff\x9f\x46\xe2\x2b\xdd\x64\x9b\x4d\xf6\x2a\x5c\xb0\xf7\x74\xbf\x52\xfa\x10\x5e\xae\x81\xfe\xbe\xb4\xf6\xf8\xf5\xf0\x0f\xd7\xc5\x8f\x84\xf3\x78\xaa\x35\x5c\xe4\x6b\x32\x97\xff\x3a\xfa\x33\x00\x00\xff\xff\x5a\xe2\x05\x53\x2d\x09\x00\x00")

func assetsRootHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRootHtml,
		"assets/root.html",
	)
}

func assetsRootHtml() (*asset, error) {
	bytes, err := assetsRootHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/root.html", size: 2349, mode: os.FileMode(420), modTime: time.Unix(1450698219, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTestrPy = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x57\xdd\x6e\xdb\xb8\x12\xbe\x96\x9e\x62\xca\x9e\x40\x36\xe2\x9f\xb8\xe7\x9c\x1b\x03\xbe\x08\xda\x34\x0d\xda\x26\x85\xe3\xee\x4d\x1a\x08\x8c\x4c\x47\x6c\x25\x51\x25\xa9\x34\xde\x22\xef\xbe\x33\xa4\x24\x2b\xb6\x9b\x74\x77\x03\x04\x96\xc8\x6f\xfe\xc9\x6f\x46\x2f\x5f\x8c\x2b\xa3\xc7\x37\xb2\x18\x8b\xe2\x0e\xca\xb5\x4d\x55\x11\xae\xb4\xca\x21\x8e\x57\x95\xad\xb4\x88\x63\x90\x79\xa9\xb4\x85\x52\xcb\xc2\xe2\x6a\x91\x58\x89\xa8\x7a\xd5\xac\x4d\xf3\xa8\xc5\xf7\x4a\x18\xdb\xbe\xab\xce\x4e\x0b\xb7\xa8\xe5\xb6\x7d\xab\x6e\x4a\xad\x12\x61\x4c\x18\xa6\xca\x58\x98\x01\x4b\xad\x2d\xa7\xe3\xb1\x45\x4d\x7a\x38\x99\xfc\xff\x7f\x23\x5e\x96\xa6\x54\x76\x94\xa8\x9c\x85\xe1\x52\xac\x20\x15\x7c\x29\x74\xaf\x3f\x0d\x03\x2d\xd0\xcb\x02\x7e\x46\xaf\x55\x61\x45\x61\x87\x8b\x75\x29\x22\x98\x42\x84\x62\x99\x4c\x38\x39\x3b\xfe\x6a\x54\x11\x0d\x20\x3a\xae\x30\x42\x2d\xff\x74\xab\xd1\x54\x99\x11\xc6\x2d\xb5\x2a\x46\xb7\xc2\xf6\xa2\xc5\xc9\xe5\x62\x1e\x2f\x2e\xde\x9f\x9c\x47\xfd\x07\xf0\xc6\xb4\x28\x55\xd7\xd4\x8e\xd0\xfc\xf8\x8f\xb3\xcb\x78\x7e\xf2\xe9\x22\xbe\xfc\xf0\xf9\x34\xea\x07\x5e\x90\x97\xb2\x2b\xe7\x02\x3c\x04\x36\xc6\xf5\x31\x29\x35\x63\x86\xef\x5e\x3d\x1c\xb2\x71\x13\x9c\xca\xc5\x5e\xb9\x5f\xc8\x38\xa1\xb2\x32\xe9\x5c\x50\x52\x7b\xc9\x00\xb4\x17\xff\x8e\xf9\xfc\x19\x06\x01\x7b\xad\xf2\x5c\x5a\x86\x59\x49\x06\xfe\xdd\xe5\x8a\x4d\x41\xbb\x77\xca\x19\x9b\x32\x83\xf5\x5e\x49\x2d\x58\x18\x3c\x04\xa4\xc0\xa0\x82\xa6\xaa\x23\x34\x6e\x7b\x2e\xa6\x01\x50\x3e\x67\xb8\x33\xa8\x4b\x61\x66\x4d\x49\x30\xf8\x40\x52\xd2\xcc\xc8\x58\x6e\x2b\x13\x27\x6a\x29\x60\x36\x83\x57\x47\x13\xf4\xaa\x89\x6a\xa1\x2b\x11\x06\x22\x33\x82\x16\xdd\xd9\xea\xb1\x93\xf9\xfc\x62\x0e\x07\xcb\x2f\xc5\xf4\xc0\x30\x38\x80\xde\x96\x9e\x81\x53\x6c\xc5\xbd\x45\x27\x56\x32\x13\x33\x3c\x7f\x08\x40\xd3\xba\xbf\x51\xfe\x96\xa3\xde\xb0\x2e\x83\x49\x78\xe1\x53\x63\x7a\x98\x18\xf4\xaf\xb6\x76\x89\x1b\x05\x9e\x46\xf0\xb6\x48\x81\xf6\x38\x0c\xfb\xea\x3a\x0c\x96\x52\x7f\x90\xee\x54\x62\xcd\x33\x7c\xc2\x85\x1e\xc1\x4a\xca\x0b\xd6\x21\x1a\x5b\xae\xf1\x10\x8c\x9b\xcc\x0d\x6b\x05\x63\x3a\x49\xc3\x05\xe6\xed\xb2\x92\x56\x8c\xee\xf3\x2c\x0a\x5d\x62\x50\x53\xc9\x6d\x3a\xc2\x5f\x9e\xd0\xc9\xef\x95\x03\x5a\x9c\xc7\x17\xef\xd1\xb9\xc0\x05\xd1\x38\xd1\x3c\x1d\xc2\x95\xc6\xfc\xd6\x05\x2e\xfb\xe8\xdb\x4a\x69\x40\x77\x40\x16\x50\xbb\x89\xc2\x4e\xbc\x63\x44\x1a\xf2\x18\xff\xfb\x54\x00\x4a\xb9\x03\x39\xd8\x5e\x33\xdd\x5c\x91\x98\x83\xd6\x49\xad\x51\xcd\xa5\xe8\xb8\xe3\xdc\x5e\x51\x9a\x4a\x51\x50\x3c\x91\x8e\x30\x4b\x49\x61\x67\x0c\xcf\xd2\x8f\x14\x0b\x55\x5b\x47\xc3\x99\x2c\xf0\x3c\xc0\x6a\x44\x3a\xe8\xa5\xd7\xf7\x5e\x17\xca\x02\xbd\x4f\xe1\x06\xb7\xbe\xe1\x22\x6a\x80\xc3\x99\x5b\xec\x38\x82\xab\xde\x89\xca\xf0\x5b\x7f\x55\xea\x8a\x3a\xd2\x18\x95\x6b\xb8\x1a\x0e\xdd\xb5\x11\xc5\xb2\x54\xb8\x75\xcd\xfa\x2d\xe8\x8d\x58\xf1\x2a\xdb\xec\x4d\x81\xae\x14\xc1\x37\x98\x13\x7f\xc1\x73\xbc\x24\x70\xc7\xb5\xe4\x37\x99\x30\xd3\x8e\x92\x2f\xf6\x3f\x1d\xb2\x98\x82\x4d\x05\x38\xeb\x60\xd5\x37\x51\xa0\x6b\x62\x89\x8f\xc0\x91\x70\x50\x09\xf1\x90\x80\xb5\xaa\x74\x7b\x9f\x1e\x2b\x3b\x7d\xd7\xd5\x74\x2b\x6d\x5a\xdd\xd4\xaa\x50\x0b\x6a\xa3\x1f\x14\xd4\x6b\x07\x38\x95\xf6\x1d\x02\x8e\x3f\x9d\x91\x9a\x8d\xa2\x62\x81\x9b\x2b\x95\x65\xea\x07\x1d\xec\xd6\x75\x30\x29\xcf\x32\xb8\x11\xc8\xe2\xea\x4e\x2e\xd1\xb9\x9b\x35\x96\x84\xdf\xc9\x9d\xb0\x3c\x9d\xbd\xbe\xf8\xf8\xf1\x6c\xe1\xdd\xb9\x7c\x77\x3c\x81\xc4\x71\x08\x70\x63\x54\x22\x31\x1a\x17\x5e\x13\x76\x73\x38\xf6\xaa\x6a\x99\xf1\x51\x70\x24\x31\x82\xb7\x4a\xe7\xdc\x92\x36\x6e\x20\x52\x3f\x0a\xa1\x3d\xcf\x49\xab\xf4\x3a\x62\x0d\x97\xe2\x25\x3b\x4d\x3d\x8d\xf5\x30\x16\x77\x8d\xd3\xa5\x26\x82\xfb\x47\xcc\x0f\x91\x4f\xee\x81\x89\xf0\xea\x6f\x53\x7a\x53\x0d\xdf\x04\xc2\x40\x55\x76\xd6\xf2\x20\x21\x5c\x97\x32\xd8\xa6\x90\x0f\x47\x3e\x20\x6a\x4f\x35\x45\x1f\x98\xb1\xcf\x16\x3d\xd6\x34\x46\x84\x3d\xa0\x32\xf4\x3b\x9c\xb9\x24\x32\xa1\xfb\x5a\xd9\x47\x6c\xf9\x82\xd8\xf2\x68\x97\x18\xcd\xf4\x4b\x51\x6b\xdc\x12\x19\x38\x1d\x8e\x18\x51\x65\x6e\x6e\xe9\x36\xe2\x0a\x85\xdf\xeb\x6f\xee\x8e\x6b\x07\x97\x29\x9f\x20\xf7\x23\xea\x8a\xa1\x47\xec\xda\x35\x81\xcf\x3a\x6b\x16\x2b\x7c\xf4\x8b\x1f\xd4\x6d\xb3\xe8\x43\x62\xd7\x57\x2c\x47\xda\xc2\x9b\x57\x43\x7c\x55\xac\xd0\x08\x24\xf5\x01\x3b\xe7\xb9\xd8\x95\x4a\x5a\x1c\xbe\x14\x04\x71\xf2\x01\x3b\xc9\xb9\xcc\x9e\xc1\x0b\x87\xa9\x05\xde\xe0\xf1\x7b\x06\xbf\x24\x48\x0d\x3f\xbe\xe3\x48\xd3\x9d\xf0\x1e\x21\xb9\xdb\x8d\x5d\xc8\x08\x7f\x70\x31\xf9\xd3\xf2\x4c\x40\xdc\x83\x7e\x2f\x9a\x0d\xf8\x37\x42\xd9\x80\x9f\x8c\x63\x03\xdb\x09\x82\xe8\xf2\x21\x0c\x5f\xfa\x3f\x18\xb6\x7f\xf0\xf1\xf8\xec\xbc\xf3\x4e\x4b\x2f\xb7\xfe\x42\x3c\x92\x71\x4c\x41\xe1\xf4\x87\x8d\x83\xc5\x31\xfa\x5c\xc4\x31\x9b\xfa\x26\x96\x21\xcd\x53\xe3\xc5\xe6\x77\xe7\x5a\xcb\x2b\xe0\xc5\x12\xda\xb5\xab\xc9\xb5\x93\x1b\xa6\x0c\xb0\x4f\xed\x2c\x0f\x53\x91\x95\x8c\x88\x3b\xa8\x39\x1c\x9f\xc4\x3d\xde\xed\xa3\x3e\x5a\xc0\x33\xe9\x7b\xee\xbe\x39\xcb\x13\x53\xd4\xf7\x9e\x50\xcf\xf8\xf5\xed\xed\xde\xa0\x3d\x8c\x0e\x0d\x12\x72\x69\x0c\x12\x26\xdb\x3b\x54\x38\xc7\x26\x4f\x18\xdc\x9d\x00\x9f\x33\xbc\x2d\xf1\x6f\x1d\xe8\xce\xad\xcf\xda\xde\x80\xff\xa6\x59\xaa\x0b\xd5\x79\xa7\xfc\x93\x4e\x25\xdd\x78\xb1\xff\x94\xfc\xd7\x49\xef\x39\x0d\xd8\x7b\x19\xa9\xa8\xbf\x01\x5a\xc4\xab\x6b\xd4\xa4\x95\x72\x1f\x06\x23\xd6\x8d\x7f\x6b\x88\x72\x20\x1a\x92\x4b\x95\xd3\xb4\xc5\x3a\x43\xd5\x26\x1f\xd4\x1d\x4d\xa2\x65\x69\x21\xaf\xd0\x14\xf6\x43\x71\x2f\x92\x8a\xfa\x8f\x2c\x0c\xf6\x45\xe0\x90\xf3\x3b\x6c\x0c\xd8\x27\xbf\x8a\xc4\xb2\x6e\x22\x3a\x23\xd3\xa3\xa1\x12\x6d\xd7\x63\x2f\x85\x5c\x83\x5c\xc4\x5d\x0e\x3f\x57\xd0\x8c\x89\xed\xc4\x85\xf7\x56\x66\x54\x95\x27\x2a\x70\xe4\x53\x1a\x24\x68\x76\xbb\x0d\xd2\xfa\x52\xb9\x79\xaa\x9e\x79\x69\x2e\x74\x53\x61\x6d\x62\xea\x67\xab\x3d\xdf\x07\xad\x63\x87\x68\x1c\x87\x21\x9c\xd5\xc8\x66\xa3\xcf\xfd\xa0\x32\x3f\xa8\xb7\x93\x7a\x23\x34\x7c\x52\xa8\x76\xc6\x63\xeb\xdc\xd0\x5e\x27\x1d\x75\xf6\xa0\x2a\x33\x85\xed\x70\x39\x82\x8b\xd2\x35\x64\x9a\x2b\x8c\x10\x6e\x56\x68\xc6\x0a\xec\x78\xfe\xb3\xa8\xff\x57\x00\x00\x00\xff\xff\xad\xff\x21\x8b\xb3\x0e\x00\x00")

func assetsTestrPyBytes() ([]byte, error) {
	return bindataRead(
		_assetsTestrPy,
		"assets/testR.py",
	)
}

func assetsTestrPy() (*asset, error) {
	bytes, err := assetsTestrPyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/testR.py", size: 3763, mode: os.FileMode(493), modTime: time.Unix(1450698000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/htmlReport.html": assetsHtmlreportHtml,
	"assets/repos.html": assetsReposHtml,
	"assets/root.html": assetsRootHtml,
	"assets/testR.py": assetsTestrPy,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"htmlReport.html": &bintree{assetsHtmlreportHtml, map[string]*bintree{}},
		"repos.html": &bintree{assetsReposHtml, map[string]*bintree{}},
		"root.html": &bintree{assetsRootHtml, map[string]*bintree{}},
		"testR.py": &bintree{assetsTestrPy, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

